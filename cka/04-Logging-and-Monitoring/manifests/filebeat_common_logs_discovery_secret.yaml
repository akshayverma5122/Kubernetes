apiVersion: v1
kind: Secret
metadata:
  name: filebeat-config
  labels:
    k8s-app: filebeat
type: Opaque
stringData:
  filebeat.yml: |
    filebeat.autodiscover:
      providers:
        - type: kubernetes
          node: ${NODE_NAME}
          hints.enabled: false
          templates:
            - condition:
                and:
                  - equals:
                      kubernetes.namespace: oaans
                  - contains:
                      kubernetes.labels.app.kubernetes.io/name:
                        - email
                        - fido
                        - oaa
                        - oaa-admin-ui
                        - oaa-kba
                        - oaa-policy
                        - push
                        - risk
                        - risk-cc
                        - sms
                        - spui
                        - totp
                        - yotp
                        - oaa-mgmt
              config:
                - type: container
                  paths:
                    - /var/log/containers/*-${data.kubernetes.container.id}.log
                  processors:
                    - add_fields:
                        target: ""
                        fields:
                          component: ${data.kubernetes.labels.app.kubernetes.io/name}
                          kubernetes.namespace: ${data.kubernetes.namespace}

            - condition:
                and:
                  - equals:
                      kubernetes.namespace: kube-system
                  - or:
                      - equals:
                          kubernetes.labels.k8s-app: kube-dns
                      - equals:
                          kubernetes.labels.component: etcd
                      - equals:
                          kubernetes.labels.component: kube-apiserver
                      - equals:
                          kubernetes.labels.component: kube-controller-manager
                      - equals:
                          kubernetes.labels.k8s-app: kube-proxy
                      - equals:
                          kubernetes.labels.component: kube-scheduler
              config:
                - type: container
                  paths:
                    - /var/log/containers/*-${data.kubernetes.container.id}.log
                  processors:
                    - add_fields:
                        target: ""
                        fields:
                          component: ${data.kubernetes.labels.component}
                          kubernetes.namespace: ${data.kubernetes.namespace}

            - condition:
                and:
                  - equals:
                      kubernetes.namespace: ingress-nginx
                  - equals:
                      kubernetes.labels.app.kubernetes.io/name: ingress-nginx
              config:
                - type: container
                  paths:
                    - /var/log/containers/*-${data.kubernetes.container.id}.log
                  processors:
                    - add_fields:
                        target: ""
                        fields:
                          component: ingress-nginx
                          kubernetes.namespace: ${data.kubernetes.namespace}

    processors:
      - drop_event:
          when:
            not:
              or:
                - equals.kubernetes.namespace: oaans
                - equals.kubernetes.namespace: kube-system
                - equals.kubernetes.namespace: ingress-nginx

    output.logstash:
      hosts:
        - logstash-agent-ls-api.elastic-system.svc.cluster.local:5044


