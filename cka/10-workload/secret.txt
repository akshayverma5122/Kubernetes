Secret :- 

generic  - Creates a secret from a file, directory, or literal value.
docker-registry - Creates a secret for use with a Docker registry.
tls - Creates a TLS secret.

Generic Secret :- 

--from-literal=password=secret  - Literal values, which are key-value pairs as plain text
--from-env-file=config.env   - A file that contains key-value pairs and expects them to be environment variables
--from-file=id_rsa=~/.ssh/id_rsa - A file with arbitrary contents
--from-file=config-dir - A directory with one or many files

Consuming a Secret as Environment Variables

1. create the generic secret using below command. 

kubectl create secret generic db-cred --from-literal=username=sys --from-literal=password=Wipro@123

2.  Injecting Secret key-value pairs into the container. 

vi secret-pod.yaml 

apiVersion: v1
kind: Pod
metadata:
  name: backend
spec:
  containers:
  - image: bmuschko/web-app:1.0.1
    name: backend
    envFrom:
    - secretRef:
        name: db-cread

kubectl create -f secret-pod.yaml

3. execute the below command for verification. 

kubectl exec backend -- env

Mounting a Secret as a Volume:-
-----------------------------

1. create the ssh type of secret using below commands. 

cp ~/.ssh/id_rsa ssh-privatekey
kubectl create secret generic secret-ssh-auth --from-file=ssh-privatekey   --type=kubernetes.io/ssh-auth

2. Mounting a Secret as a volume using below manifest file. 

nano secret.yaml 

apiVersion: v1
kind: Pod
metadata:
  name: backend
spec:
  containers:
  - image: bmuschko/web-app:1.0.1
    name: backend
    volumeMounts:
    - name: ssh-volume
      mountPath: /var/app
      readOnly: true
  volumes:
  - name: ssh-volume
    secret:
      secretName: secret-ssh-auth

kubectl create -f secret.yaml

3. execute the below command for verification. 

kubectl exec -it backend -- /bin/sh
ls -1 /var/app
cat /var/app/ssh-privatekey

