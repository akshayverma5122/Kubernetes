Exercise 1

Create a network policy that denies egress traffic to any domain outside of the cluster. The network policy applies to Pods with the label app=backend and also allows egress traffic for port 53 for UDP and TCP to Pods in any other namespace.
Create a Pod named allowed that runs the busybox:1.36.0 image on port 80 and assign it the label app=frontend. Make a curl call to http://google.com. The network call should be allowed, as the network policy doesnâ€™t apply to the Pod.
Create another Pod named denied that runs the busybox:1.36.0 image on port 80 and assign it the label app=backend. Make a curl call to http://google.com. The network call should be blocked.

Solution - 

1. create the network policy with below configuration. 

vi deny-egress-external.yaml

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: deny-egress-external
spec:
  podSelector:
    matchLabels:
      app: backend
  policyTypes:
  - Egress
  egress:
  - to:
    - namespaceSelector: {}
    ports:
    - port: 53
      protocol: UDP
    - port: 53
      protocol: TCP

2. execute the below command to create the network policy. 

kubectl create -f  deny-egress-external.yaml

3. create the pod with app=frontend labels which does not match the label with network policy label and try to access the http://google.com. we can access because networkpolicy is not applied to this pod. 

kubectl run web --image=busybox:1.36.0 -l app=frontend --port=80 -it --rm --restart=Never -- wget http://google.com --timeout=5 --tries=1

4. create the one more pod with app=backend labels which wil match the label with network policy label and try to access the http://google.com. we can not access because networkpolicy is applied to this pod. 

kubectl run web --image=busybox:1.36.0 -l app=backend --port=80 -it --rm --restart=Never -- wget http://google.com --timeout=5 --tries=1
