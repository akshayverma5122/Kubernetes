Excercise :- 

create the pods with two containers which can list the pods and deployments in the k97 namespace. create the clusterrole and rolebinding to accomplish this. 

Solution :- 

1. create the pods with two containers. 

vi setup.yaml 

apiVersion: v1
kind: Namespace
metadata:
  name: k97
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sa-api
  namespace: k97

---
apiVersion: v1
kind: Pod
metadata:
  name: list-objects
  namespace: k97
spec:
  serviceAccountName: sa-api
  containers:
  - name: pods
    image: alpine/curl:3.14
    command: ['sh', '-c', 'while true; do curl -s -k -m 5 -H "Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" https://kubernetes.default.svc.cluster.local/api/v1/namespaces/k97/pods; sleep 10; done']
  - name: deployments
    image: alpine/curl:3.14
    command: ['sh', '-c', 'while true; do curl -s -k -m 5 -H "Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" https://kubernetes.default.svc.cluster.local/apis/apps/v1/namespaces/k97/deployments; sleep 10; done']

kubectl create -f setup.yaml 

2. check the container logs using the below commands. 

kubectl logs list-objects -c pods -n k97
kubectl logs list-objects -c deployments -n k97

And container will unable to list the pods and deployments because we have not provided the access to serviceaccount sa-api to list the pods and deployments. 

3. Now lets create the clusterrole and rolebinding to provide the access. 

vi clusterrole.yaml

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: list-pods-clusterrole
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list"]
- apiGroups: ["apps"]             
  resources: ["deployments"]
  verbs: ["list"]

vi rolebinding.yaml 

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: serviceaccount-pod-rolebinding
  namespace: k97
subjects:
- kind: ServiceAccount
  name: sa-api
roleRef:
  kind: ClusterRole
  name: list-pods-clusterrole
  apiGroup: rbac.authorization.k8s.io

kubectl create -f clusterrole.yaml 
kubectl create -f rolebinding.yaml 

4. Now we have provided the access to pod to list the pods and deployments in k97 namespace. please check logs again for verification. 

kubectl logs list-objects -c pods -n k97
kubectl logs list-objects -c deployments -n k97

